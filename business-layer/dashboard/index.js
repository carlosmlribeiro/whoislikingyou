// Generated by CoffeeScript 1.4.0
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

module.exports = function(req, res, events, callback) {
  var action, error, facebook, get_token, objectView, page, pageId, reply, user;
  if (req.method === "GET") {
    action = req.params.action || "index";
    switch (action.toString().toLowerCase()) {
      case "index":
        objectView = {};
        facebook = require("../../data-layer/external-services/facebook");
        page = require("../../data-layer/collections/page");
        pageId = req.user.activePage._id;
        return page.getAccess(pageId, function(err, access_token) {
          var get_token;
          get_token = "/" + pageId + "?access_token=" + access_token;
          return facebook.get(get_token, function(err, response) {
            if (err != null) {
              return callback(err);
            }
            objectView.pageData = response;
            return callback(null, "app/dashboard", objectView);
          });
        });
      default:
        error = new Error('Action not found: ' + action.toString().toLowerCase());
        error.http_code = 400;
        return callback(error);
    }
  } else if (req.method === "POST") {
    if (req.params.action != null) {
      switch (req.params.action.toString().toLowerCase()) {
        case "addpages":
          user = require("../../data-layer/collections/user");
          return user.addPage(req.user.email, req.body, function(err, message) {
            console.log("sending event");
            events.emit('changed_active_page', {
              _id: page.id,
              name: page.name
            });
            return callback(err, message);
          });
        case "getpages":
          reply = [];
          facebook = require("../../data-layer/external-services/facebook");
          get_token = "/" + req.user.username + "/accounts?access_token=" + req.user.accessKey;
          return facebook.get(get_token, function(err, response) {
            var pageItem, _i, _len, _ref;
            if (err != null) {
              return callback(err);
            }
            page = require("../../data-layer/collections/page");
            _ref = response.data;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              pageItem = _ref[_i];
              page.upsert(pageItem, function(err) {
                var _ref1;
                if (err != null) {
                  return callback(err);
                }
                if (_ref1 = pageItem.id, __indexOf.call(req.user.pageTest, _ref1) >= 0) {
                  pageItem.exists = true;
                }
                return reply.push(pageItem);
              });
            }
            return callback(null, reply);
          });
        default:
          error = new Error('Action not found: ' + req.params.action.toString().toLowerCase());
          error.http_code = 400;
          return callback(error);
      }
    } else {
      error = new Error('Action is mandatory for POST requests');
      error.http_code = 400;
      return callback(error);
    }
  } else {
    error = new Error('Method is not allowed');
    error.http_code = 405;
    return callback(error);
  }
};
