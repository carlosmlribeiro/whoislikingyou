// Generated by CoffeeScript 1.4.0
var app, appId, appSecret, everyauth, express, http, lingua, mongodb, mongodbURL, mongodb_database, mongodb_host, mongodb_password, mongodb_port, mongodb_username, myAuthentication, myErrorHandler, myMiddleware, myRoutes, mySocketRoutes, port, server, session_store, winston, winstonMongoDB;

express = require("express");

http = require("http");

winston = require("winston");

lingua = require("lingua");

mongodb = require("connect-mongodb");

everyauth = require("everyauth");

winstonMongoDB = require('winston-mongodb').MongoDB;

myMiddleware = require("./business-layer/common/middleware");

myErrorHandler = require("./business-layer/common/errorHandler");

myAuthentication = require("./business-layer/common/authentication");

myRoutes = require("./business-layer/common/routes");

mySocketRoutes = require("./business-layer/common/socketroutes");

mongodb_username = process.env.mongodb_username || "admin";

mongodb_password = process.env.mongodb_password || "whoislikingyou";

mongodb_port = process.env.mongodb_port || 10072;

mongodb_host = process.env.mongodb_host || "alex.mongohq.com";

mongodb_database = process.env.mongodb_database || "whoislikingyou";

mongodbURL = "mongodb://" + mongodb_username + ":" + mongodb_password + "@" + mongodb_host + ":" + mongodb_port + "/" + mongodb_database;

appId = process.env.appId || '111565172259433';

appSecret = process.env.appSecret || '85f7e0a0cc804886180b887c1f04a3c1';

port = process.env.PORT || 5000;

winston.add(winstonMongoDB, {
  db: mongodb_username,
  host: mongodb_host,
  port: mongodb_port,
  username: mongodb_username,
  password: mongodb_password
});

everyauth.everymodule.findUserById(function(id, callback) {
  return callback(null, id);
});

everyauth.facebook.scope('manage_pages').appId(appId).appSecret(appSecret).findOrCreateUser(function(session, token, secret, user) {
  var promise;
  return promise = this.Promise().fulfill(user);
}).redirectPath('/app/login');

app = express();

app.set('views', "./user-interface/views");

app.set('view engine', 'toffee');

app.set('db', mongodbURL);

app.set('port', port);

app.locals.layout = './user-interface/views/layout.toffee';

if (app.get("env") === "development") {
  app.use(express.logger('dev'));
  everyauth.debug = true;
}

if (app.get("env") === "production") {
  winston.remove(winston.transports.Console);
}

app.use(express.favicon('./public/images/favicon.ico'));

app.use(myMiddleware.type('multipart/form-data', express.limit('20mb')));

app.use(lingua(app, {
  defaultLocale: 'en',
  path: './user-interface/locales'
}));

app.use(express.bodyParser({
  keepExtensions: true,
  uploadDir: "./public/uploads"
}));

session_store = new mongodb({
  url: mongodbURL
});

app.use(express.cookieParser('whoislikingyou'));

app.use(express.session({
  key: 'sid',
  cookie: {
    maxAge: 3600000
  },
  store: session_store
}));

app.use(everyauth.middleware());

app.use(express.compress({
  level: 9,
  memLevel: 9
}));

app.use(express["static"]('./public'));

app.use(app.router);

if (app.get("env") === "development") {
  app.use(express.errorHandler({
    dumpExceptions: true,
    showStack: true
  }));
  app.disable('view cache');
} else {
  app.use(myErrorHandler.logErrors);
  app.use(myErrorHandler.clientErrorHandler);
  app.use(myErrorHandler.errorHandler);
}

myRoutes(app, myAuthentication);

server = http.createServer(app);

server.listen(app.get('port'), function() {
  return winston.log('info', 'Server up-and-running on port ' + server.address().port + ", in " + app.get("env"));
});
